<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="AppAboutPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>